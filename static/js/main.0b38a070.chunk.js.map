{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","Cardlist","robots","map","user","i","src_components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onChangeSearch","searched","target","value","_this2","fetch","then","response","json","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.0b38a070.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = ({ id, name, email}) => {\n    return(\n        <div className='bg-card dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={ `https://robohash.org/${id}?200x200` } alt='robot'/>\n            <div>\n                <h2>{ name }</h2>\n                <p>{ email }</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from '../components/Card';\n\nconst Cardlist = ({ robots }) => {\n    return (\n        <div>\n            { robots.map((user, i) => {\n                    return (\n                        <Card \n                            key = { i }\n                            id = { robots[i].id } \n                            name = { robots[i].name } \n                            email = { robots[i].email } \n                        />\n                    );\n                }) }\n        </div>\n    );\n}\n\nexport default Cardlist;","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className=\"pa2\">\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange} \n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n  return(\n    <div style={{ overflow: 'scroll', height: '950px' }}>\n        { props.children }\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\ncomponentDidCatch ( error, info ) {\n  this.setState({ hasError: true })\n}\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Dengggg that's a problem yo!</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport Cardlist from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport './App.css';\n\nclass App extends Component {\n    constructor () {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\ncomponentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(user => {this.setState({robots: user})});\n}\n\n    onChangeSearch = (searched) => {\n        this.setState({ searchfield: searched.target.value })\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        }) \n\n        return !robots.length ?\n            <h1>loading... wait for the robots to engage...</h1> :\n            (\n                <div className=\"tc\">\n                    <h1>RoboFriends</h1>\n                    < SearchBox searchChange = { this.onChangeSearch }/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            < Cardlist robots = { filteredRobots } />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\nreportWebVitals();\n"],"sourceRoot":""}